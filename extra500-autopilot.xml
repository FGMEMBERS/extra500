<?xml version="1.0" encoding="utf-8" ?>
	
<!--
    This file is part of extra500

    The extra500 is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    The extra500 is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with extra500.  If not, see <http://www.gnu.org/licenses/>.

      Author: Eric van den Berg
      Date: 2013-05-23

      Last change:      Eric van den Berg
      Date:             2013-10-28
-->

<autopilot name="STEC55X">

<!--**************************************AP COMPUTER ACCELERATION SENSOR********************************************************-->

<!--this the acceleration sensor in the AP computer (in the glareshield). It is used to dampen the pitch motion-->
	<channel name="accelsensor">
		<accelerometer name="/autopilot/accsens-channel/ap-z-accelsensor">
			<location unit="M">
				<x>1.1</x>
				<y>0.0</y>
				<z>0.0</z>
			</location>
  			<orientation unit="DEG">
    				<pitch>0.0</pitch>
    				<roll>0.0</roll>
    				<yaw>0.0</yaw>
  			</orientation>
			<axis>Z</axis>
			<gain>0.0310809970784</gain>	<!--1/32.174 -->
			<output>/autopilot/accsens-channel/ap-z-accel</output>
		</accelerometer>

	</channel>

<!--*****************************************ALTITUDE SENSOR*****************************************************************-->

	<channel name="altitudesensor">
<!-- this is the dedicated AP altitude sensor (with its own static system) ,located in the tail cone. It is used to mnge vertical speed and altitude hold-->
		<fcs_function name="/autopilot/altsensor/vs-fpm-unfiltered">
			<function>
				<product>
					<value>60.0</value>		
					<sum>
						<property>/instrumentation/altimeter-AP/indicated-altitude-ft</property>
						<property>/autopilot/altsensor/alt-old</property>
					</sum>
					<pow>
						<max>
							<value>0.0001</value>	
							<property>sim-dt-sec</property>
						</max>
						<value>-1.0</value>	
					</pow>
				</product>
			</function>
		</fcs_function>

		<lead_lag_filter name="/autopilot/altsensor/vs-fpm">
			<input>/autopilot/altsensor/vs-fpm-unfiltered</input>
			<c1>/autopilot/altsensor/c1</c1>
			<c2>/autopilot/altsensor/c2</c2>
			<c3>/autopilot/altsensor/c3</c3>
			<c4>/autopilot/altsensor/c4</c4>
		</lead_lag_filter>

		<fcs_function name="/autopilot/altsensor/alt-old">
			<function>
				<product>
					<value>-1.0</value>				
					<property>/instrumentation/altimeter-AP/indicated-altitude-ft</property>
				</product>	
			</function>
		</fcs_function>
	</channel>

<!--***************************************HEADING**********************************************************************-->

	<channel name="heading">
<!-- this is the heading channel. when the hdg mode is active, the hdg bug of the LH IFD is followed-->

<!-- heading source is selected -->
		<switch name="hdgselect">
			<default value="/instrumentation/heading-indicator-IFD-LH/heading-bug-error-deg"/>
			<test value="/instrumentation/heading-indicator-IFD-RH/heading-bug-error-deg">
				/instrumentation/hdg-source eq 1
			</test>
			<output>/autopilot/hdg-channel/heading-bug-error-deg</output>
		</switch>

<!--the heading error is clipped to -20 to 20 deg -->
		<pure_gain name="/autopilot/hdg-channel/lmd-hdg-error">
			<input>/autopilot/hdg-channel/heading-bug-error-deg</input>
			<gain>1.0</gain>
			<clipto>
				<min>-20</min>
				<max>20</max>
			</clipto>
		</pure_gain>

<!--determining the target turn rate using the hdg error. Note that kp and the clipped hdg error determines the maximum turnrate-->
		<pid name="/autopilot/hdg-channel/target-turn-rate">
			<input>/autopilot/hdg-channel/lmd-hdg-error</input>
			<kp>/autopilot/hdg-channel/lmd-hdg-error-kp</kp>							<!--180deg/min devided by 20deg -->
			<ki>/autopilot/hdg-channel/lmd-hdg-error-ki</ki>
			<kd>/autopilot/hdg-channel/lmd-hdg-error-kd</kd>
		</pid>
		
<!-- the turn rate (inverted) as measured by the turn coordinator in deg/s (RH panel) -->
		<fcs_function name="/autopilot/hdg-channel/turn-rate-inv">
			<function>
				<product>
					<value>-180.0</value>
					<property>/instrumentation/turn-indicator/indicated-turn-rate</property>  <!--pos right-->
				</product>
			</function>
		</fcs_function>

<!-- the turn rate error -->
		<fcs_function name="/autopilot/hdg-channel/turn-rate-error">
			<function>
				<sum>
					<property>/autopilot/hdg-channel/target-turn-rate</property>	
					<property>/autopilot/hdg-channel/turn-rate-inv</property>
				</sum>
			</function>
		</fcs_function>

<!-- the commanded aileron position change using the turn rate error -->
		<pid name="/autopilot/hdg-channel/cmd-ail-change">
			<input>/autopilot/hdg-channel/turn-rate-error</input>
			<kp>/autopilot/hdg-channel/turn-rate-error-kp</kp>							
			<ki>/autopilot/hdg-channel/turn-rate-error-ki</ki>
			<kd>/autopilot/hdg-channel/turn-rate-error-kd</kd>
		</pid>

<!-- calculating the new aileron position-->
		<fcs_function name="/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/aileron-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/heading</property>
						<value>1.0</value>
						<property>/autopilot/hdg-channel/cmd-ail-change</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw</output>
		</fcs_function>

<!-- making sure the aileron servo is not going to fast-->	
		<actuator name="/autopilot/hdg-channel/ail-servo">
			<input>/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/hdg-channel/cmd-ap-ail-pos-norm</output>
		</actuator>

<!--this makes the aileron pilot input to move along, so when the hdg mode is disconnected, the ailerons are in the correct position-->
		<switch name="headingon">
			<default value="/controls/flight/aileron"/>
			<test value="/autopilot/hdg-channel/cmd-ap-ail-pos-norm">
				/autopilot/mode/heading eq 1
			</test>
			<output>/controls/flight/aileron</output>
		</switch>


	</channel>

<!--***************************************RADIO NAVIGATION**********************************************************************-->

	<channel name="radionav">
<!-- this is the radionav channel. when the nav mode is active, the ap will intercept the selected radial of a VOR or the selected LOC-->


<!-- selection of nav unit based on /instrumentation/nav-source property -->
		<switch name="navdistanceselect">
			<default value="/instrumentation/nav[0]/nav-distance"/>
			<test value="/instrumentation/nav[1]/nav-distance">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/nav-distance-m</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/nav-distance-nm">
			<function>
				<product>
					<property>/autopilot/radionav-channel/nav-distance-m</property>
					<property>/extra500/const/METER2NM</property> 
				</product>
			</function>
		</fcs_function>

		<switch name="navradialselect">
			<default value="/instrumentation/nav[0]/radials/reciprocal-radial-deg"/>
			<test value="/instrumentation/nav[1]/radials/reciprocal-radial-deg">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/radials/reciprocal-radial</output>
		</switch>

		<switch name="navfromflagselect">
			<default value="/instrumentation/nav[0]/from-flag"/>
			<test value="/instrumentation/nav[1]/from-flag">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/from-flag</output>
		</switch>

		<switch name="navtoflagselect">
			<default value="/instrumentation/nav[0]/to-flag"/>
			<test value="/instrumentation/nav[1]/to-flag">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/to-flag</output>
		</switch>

		<switch name="navselect">
			<default value="/instrumentation/nav[0]/heading-needle-deflection-norm"/>
			<test value="/instrumentation/nav[1]/heading-needle-deflection-norm">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd</output>
		</switch>

		<pure_gain name="/autopilot/radionav-channel/heading-needle-deflection-norm-lmd">
			<input>/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd</input>
			<gain>1</gain>
			<clipto>
				<min>-0.1</min>
				<max>0.1</max>		
			</clipto>
		</pure_gain>

<!-- in soft mode, neglect large needle deflections -->
		<switch name="needle-deflect-gt-half">
			<default value="0"/>
			<test logic="OR" value="1">
				/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd gt 0.5
				/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd lt -0.5
			</test>
			<output>/autopilot/radionav-channel/needle-defl-gt-half</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/timer-soft-lnd">
			<function>
				<product>
					<property>/autopilot/radionav-channel/needle-defl-gt-half</property>
					<sum> 
						<property>/autopilot/radionav-channel/timer-soft-lnd</property> 
						<property>sim-dt-sec</property>
					</sum>
				</product>
			</function>
		</fcs_function>

		<switch name="needle-deflect-full">
			<default value="0"/>
			<test logic="OR" value="1">
				/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd gt 0.99
				/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd lt -0.99
			</test>
			<output>/autopilot/radionav-channel/needle-defl-full</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/timer-full-defl">
			<function>
				<product>
					<property>/autopilot/radionav-channel/needle-defl-full</property>
					<sum> 
						<property>/autopilot/radionav-channel/timer-full-defl</property> 
						<property>sim-dt-sec</property>
					</sum>
				</product>
			</function>
		</fcs_function>

		<switch name="needle-deflect-s">
			<default value="/autopilot/radionav-channel/heading-needle-deflection-norm-nlmd"/>
			<test logic="AND" value="/autopilot/radionav-channel/heading-needle-deflection-norm-lmd">
				/autopilot/radionav-channel/gain-mode eq 3
				/autopilot/radionav-channel/timer-soft-lnd lt 60
				/autopilot/radionav-channel/timer-full-defl lt 3
			</test>
			<output>/autopilot/radionav-channel/heading-needle-deflection-norm</output>
		</switch>

<!-- getting the "in range" property from the selected nav unit -->
		<switch name="inrange">
			<default value="/instrumentation/nav[0]/in-range"/>
			<test value="/instrumentation/nav[1]/in-range">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/in-range</output>
		</switch>

<!-- getting the "is-localizer-frequency" property from the selected nav unit -->
		<switch name="locselect">
			<default value="/instrumentation/nav[0]/frequencies/is-localizer-frequency"/>
			<test value="/instrumentation/nav[1]/frequencies/is-localizer-frequency">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/is-localizer-frequency</output>
		</switch>

<!--switching REV mode off when not a localizer freq -->
		<switch name="revmodeautodisc">
			<default value="/autopilot/mode/rev"/>
			<test value="0">
				/autopilot/radionav-channel/is-localizer-frequency eq 0
			</test>
			<output>/autopilot/mode/rev</output>
		</switch>

		<switch name="revmodeautodisc2">
			<default value="/instrumentation/nav[0]/back-course-btn"/>
			<test value="0">
				/autopilot/mode/rev eq 0
			</test>
			<output>/instrumentation/nav[0]/back-course-btn</output>
		</switch>

		<switch name="revmodeautodisc3">
			<default value="/instrumentation/nav[1]/back-course-btn"/>
			<test value="0">
				/autopilot/mode/rev eq 0
			</test>
			<output>/instrumentation/nav[1]/back-course-btn</output>
		</switch>

<!--logic for cap and soft modes -->
<!-- NOTE: gain-mode is changed to 0 or 1 all the time, do not use this property outside this channel!!! -->
		<switch name="gainmode1">
			<default value="0"/>
			<test logic="AND" value="1">
				<test logic="AND" value="1">
					/autopilot/radionav-channel/in-range eq 1
					/autopilot/mode/nav eq 1
					/autopilot/radionav-channel/heading-needle-deflection-norm lt 0.15
					/autopilot/radionav-channel/heading-needle-deflection-norm gt -0.15
				</test>
				<test logic="AND" value="1">
					/autopilot/radionav-channel/radials/diff lt 10
				</test>
			</test>
			<output>/autopilot/radionav-channel/gain-mode</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/timer-cap">
			<function>
				<product>
					<property>/autopilot/radionav-channel/gain-mode</property>
					<sum> 
						<property>/autopilot/radionav-channel/timer-cap</property> 
						<property>sim-dt-sec</property>
					</sum>
				</product>
			</function>
		</fcs_function>

		<switch name="gainmode2">
			<default value="/autopilot/radionav-channel/gain-mode"/>
			<test logic="AND" value="2">
				/autopilot/radionav-channel/timer-cap gt 15
			</test>
			<output>/autopilot/radionav-channel/gain-mode</output>
		</switch>

		<switch name="gainmode3">
			<default value="/autopilot/radionav-channel/gain-mode"/>
			<test logic="AND" value="3">
				/autopilot/radionav-channel/timer-cap gt 75
			</test>
			<output>/autopilot/radionav-channel/gain-mode</output>
		</switch>

		<switch name="cap">
			<default value="0"/>
			<test logic="AND" value="1">
				<test logic="OR" value="1">
					/autopilot/radionav-channel/gain-mode eq 1
					/autopilot/radionav-channel/gain-mode eq 2
				</test>
				<test value="1">
					/autopilot/radionav-channel/is-localizer-frequency eq 0
				</test>
				<test logic="OR" value="1">
					/instrumentation/nav-source eq 0
					/instrumentation/nav-source eq 1
				</test>
			</test>
			<output>/autopilot/mode/cap</output>
		</switch>

		<switch name="soft">
			<default value="0"/>
			<test logic="AND" value="1">
				<test logic="OR" value="1">
					/autopilot/radionav-channel/gain-mode eq 2
					/autopilot/radionav-channel/gain-mode eq 3
				</test>
				<test value="1">
					/autopilot/radionav-channel/is-localizer-frequency eq 0
				</test>
				<test logic="OR" value="1">
					/instrumentation/nav-source eq 0
					/instrumentation/nav-source eq 1
				</test>
			</test>
			<output>/autopilot/mode/soft</output>
		</switch>

<!-- setting gains and max turnrates for CAP, CAP-SOFT and SOFT -->

		<switch name="gains/gain-c">
			<default value="/autopilot/radionav-channel/gains/gain-n"/>
			<test value="/autopilot/radionav-channel/gains/gain-c">
				/autopilot/radionav-channel/gain-mode eq 1
			</test>
			<output>/autopilot/radionav-channel/gain</output>
		</switch>

		<switch name="gains/gain-cs">
			<default value="/autopilot/radionav-channel/gain"/>
			<test value="/autopilot/radionav-channel/gains/gain-cs">
				/autopilot/radionav-channel/gain-mode eq 2
			</test>
			<output>/autopilot/radionav-channel/gain</output>
		</switch>

		<switch name="gains/gain-s">
			<default value="/autopilot/radionav-channel/gain"/>
			<test value="/autopilot/radionav-channel/gains/gain-s">
				/autopilot/radionav-channel/gain-mode eq 3
			</test>
			<output>/autopilot/radionav-channel/gain</output>
		</switch>

<!-- gain for LOC -->
		<switch name="gains/gain-loc">
			<default value="/autopilot/radionav-channel/gain"/>
			<test value="/autopilot/radionav-channel/gains/gain-loc">
				/autopilot/radionav-channel/is-localizer-frequency eq 1
			</test>
			<output>/autopilot/radionav-channel/gain</output>
		</switch>

		<switch name="turnrate-cs">
			<default value="/autopilot/radionav-channel/lmd-hdg-error-kp-n"/>
			<test value="/autopilot/radionav-channel/lmd-hdg-error-kp-cs">
				/autopilot/radionav-channel/gain-mode eq 2
			</test>
			<output>/autopilot/radionav-channel/lmd-hdg-error-kp</output>
		</switch>

		<switch name="turnrate-s">
			<default value="/autopilot/radionav-channel/lmd-hdg-error-kp"/>
			<test value="/autopilot/radionav-channel/lmd-hdg-error-kp-s">
				/autopilot/radionav-channel/gain-mode eq 3
			</test>
			<output>/autopilot/radionav-channel/lmd-hdg-error-kp</output>
		</switch>

<!-- turnrate for LOC -->
		<switch name="turnrate-loc">
			<default value="/autopilot/radionav-channel/lmd-hdg-error-kp"/>
			<test value="/autopilot/radionav-channel/lmd-hdg-error-kp-loc">
				/autopilot/radionav-channel/is-localizer-frequency eq 1
			</test>
			<output>/autopilot/radionav-channel/lmd-hdg-error-kp</output>
		</switch>

<!-- closure rate for LOC -->
		<switch name="closurerate-loc">
			<default value="/autopilot/radionav-channel/tgt-hdg-kd-n"/>
			<test value="/autopilot/radionav-channel/tgt-hdg-kd-loc">
				/autopilot/radionav-channel/is-localizer-frequency eq 1
			</test>
			<output>/autopilot/radionav-channel/tgt-hdg-kd</output>
		</switch>

<!-- min relative hdg for LOC -->
		<switch name="relative-hdg-loc1">
			<default value="/autopilot/radionav-channel/relative-hdg-extr/rel-hdg-n-min"/>
			<test logic="AND" value="/autopilot/radionav-channel/relative-hdg-extr/rel-hdg-loc-min">
				/autopilot/radionav-channel/is-localizer-frequency eq 1
				/autopilot/radionav-channel/gain-mode ge 1
			</test>
			<output>/autopilot/radionav-channel/rel-hdg-min</output>
		</switch>

<!-- max relative hdg for LOC -->
		<switch name="relative-hdg-loc2">
			<default value="/autopilot/radionav-channel/relative-hdg-extr/rel-hdg-n-max"/>
			<test logic="AND" value="/autopilot/radionav-channel/relative-hdg-extr/rel-hdg-loc-max">
				/autopilot/radionav-channel/is-localizer-frequency eq 1
				/autopilot/radionav-channel/gain-mode ge 1
			</test>
			<output>/autopilot/radionav-channel/rel-hdg-max</output>
		</switch>

<!--calculating the target heading to intercept the radial-->
		<pid name="/autopilot/radionav-channel/relative-diff-heading-target-deg">
			<input>/autopilot/radionav-channel/heading-needle-deflection-norm</input>
			<kp>/autopilot/radionav-channel/tgt-hdg-kp</kp>							
			<ki>/autopilot/radionav-channel/tgt-hdg-ki</ki>
			<kd>/autopilot/radionav-channel/tgt-hdg-kd</kd>
			<output>/autopilot/radionav-channel/relative-d-heading-target-deg</output>
		</pid>

		<fcs_function name="/autopilot/radionav-channel/p-gain">
			<function>
				<product>
					<property>/autopilot/radionav-channel/gain</property>
					<pow> 
						<max>
							<abs>
								<property>/autopilot/radionav-channel/relative-d-heading-target-deg</property> 
							</abs>
							<value>0.000001</value>
						</max>
						<value>-1</value>
					</pow>
				</product>
			</function>
		</fcs_function>

		<pure_gain name="/autopilot/radionav-channel/p-gain-lmd">
			<input>/autopilot/radionav-channel/p-gain</input>
			<gain>1</gain>
			<clipto>
				<min>0</min>
				<max>225</max>		<!-- making sure it starts to turns at min needle defl of |0.2| --> 
			</clipto>
		</pure_gain>

		<pure_gain name="/autopilot/radionav-channel/relative-heading-target-deg">
			<input>/autopilot/radionav-channel/heading-needle-deflection-norm</input>
			<gain>/autopilot/radionav-channel/p-gain-lmd</gain>
			<clipto>
				<min>/autopilot/radionav-channel/rel-hdg-min</min>
				<max>/autopilot/radionav-channel/rel-hdg-max</max>
			</clipto>
		</pure_gain>

		<switch name="navselect2">
			<default value="/instrumentation/nav[0]/radials/selected-deg"/>
			<test value="/instrumentation/nav[1]/radials/selected-deg">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/radionav-channel/radial-deg</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/radials/diff">
			<function>
				<abs>
					<difference>
						<property>/autopilot/radionav-channel/radial-deg</property> 
						<property>/autopilot/radionav-channel/radials/old-radial</property>
					</difference>
				</abs>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/radionav-channel/radials/old-radial">
			<function>
				<property>/autopilot/radionav-channel/radial-deg</property> 
			</function>
		</fcs_function>

<!--normal target heading -->
		<fcs_function name="/autopilot/radionav-channel/hdgtarget/heading-target-n-deg">
			<function>
				<sum>
					<property>/autopilot/radionav-channel/radial-deg</property> 
					<property>/autopilot/radionav-channel/relative-heading-target-deg</property> 
				</sum>
			</function>
		</fcs_function>

<!--target heading for rev mode -->
		<fcs_function name="/autopilot/radionav-channel/hdgtarget/heading-target-revpos-deg">
			<function>
				<sum>
					<property>/autopilot/radionav-channel/hdgtarget/heading-target-n-deg</property> 
					<value>180</value> 
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/radionav-channel/hdgtarget/heading-target-revneg-deg">
			<function>
				<difference>
					<property>/autopilot/radionav-channel/hdgtarget/heading-target-n-deg</property> 
					<value>180</value> 
				</difference>
			</function>
		</fcs_function>

		<switch name="hdgtargetselect">
			<default value="/autopilot/radionav-channel/hdgtarget/heading-target-revneg-deg"/>
			<test value="/autopilot/radionav-channel/hdgtarget/heading-target-revpos-deg">
				/autopilot/radionav-channel/hdgtarget/heading-target-revneg-deg le 0
			</test>
			<output>/autopilot/radionav-channel/hdgtarget/heading-target-rev-deg</output>
		</switch>

		<switch name="revhdgselect">
			<default value="/autopilot/radionav-channel/hdgtarget/heading-target-n-deg"/>
			<test value="/autopilot/radionav-channel/hdgtarget/heading-target-rev-deg">
				/autopilot/mode/rev eq 1
			</test>
			<output>/autopilot/radionav-channel/heading-target-deg</output>
		</switch>

		<switch name="hdgselect2">
			<default value="/instrumentation/heading-indicator-IFD-LH/indicated-heading-deg"/>
			<test value="/instrumentation/heading-indicator-IFD-RH/indicated-heading-deg">
				/instrumentation/hdg-source eq 1
			</test>
			<output>/autopilot/radionav-channel/heading-deg</output>
		</switch>

		<fcs_function name="/autopilot/radionav-channel/hdg-error/heading-1-error-deg">
			<function>
				<difference>
					<property>/autopilot/radionav-channel/heading-target-deg</property> 
					<property>/autopilot/radionav-channel/heading-deg</property> 
				</difference>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/radionav-channel/hdg-error/heading-2-error-deg">
			<function>
				<sum>
					<property>/autopilot/radionav-channel/hdg-error/heading-1-error-deg</property> 
					<value>360</value> 
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/radionav-channel/hdg-error/heading-3-error-deg">
			<function>
				<difference>
					<property>/autopilot/radionav-channel/hdg-error/heading-1-error-deg</property> 
					<value>360</value> 
				</difference>
			</function>
		</fcs_function>

		<switch name="hdgdirection">
			<default value="/autopilot/radionav-channel/hdg-error/heading-1-error-deg"/>
			<test value="/autopilot/radionav-channel/hdg-error/heading-2-error-deg">
				/autopilot/radionav-channel/hdg-error/heading-1-error-deg lt -180
			</test>
			<output>/autopilot/radionav-channel/hdg-error/heading-4-error-deg</output>
		</switch>

		<switch name="hdgdirection2">
			<default value="/autopilot/radionav-channel/hdg-error/heading-4-error-deg"/>
			<test value="/autopilot/radionav-channel/hdg-error/heading-3-error-deg">
				/autopilot/radionav-channel/hdg-error/heading-1-error-deg gt 180
			</test>
			<output>/autopilot/radionav-channel/heading-error-deg</output>
		</switch>

		<switch name="validdata">
			<default value="/autopilot/radionav-channel/heading-error-deg"/>
			<test value="0">
				/autopilot/radionav-channel/in-range eq 0
			</test>
			<output>/autopilot/radionav-channel/heading-error-deg</output>
		</switch>



<!--the heading error is clipped to -20 to 20 deg -->
		<pure_gain name="/autopilot/radionav-channel/lmd-hdg-error">
			<input>/autopilot/radionav-channel/heading-error-deg</input>
			<gain>1.0</gain>
			<clipto>
				<min>-20</min>
				<max>20</max>
			</clipto>
		</pure_gain>

<!--determining the target turn rate using the hdg error. Note that kp and the clipped hdg error determines the maximum turnrate-->
		<pid name="/autopilot/radionav-channel/target-turn-rate">
			<input>/autopilot/radionav-channel/lmd-hdg-error</input>
			<kp>/autopilot/radionav-channel/lmd-hdg-error-kp</kp>							<!--180deg/min devided by 20deg -->
			<ki>/autopilot/radionav-channel/lmd-hdg-error-ki</ki>
			<kd>/autopilot/radionav-channel/lmd-hdg-error-kd</kd>
		</pid>
		
<!-- the turn rate (inverted) as measured by the turn coordinator in deg/s (RH panel) -->
		<fcs_function name="/autopilot/radionav-channel/turn-rate-inv">
			<function>
				<product>
					<value>-180.0</value>
					<property>/instrumentation/turn-indicator/indicated-turn-rate</property>  <!--pos right-->
				</product>
			</function>
		</fcs_function>

<!-- the turn rate error -->
		<fcs_function name="/autopilot/radionav-channel/turn-rate-error">
			<function>
				<sum>
					<property>/autopilot/radionav-channel/target-turn-rate</property>	
					<property>/autopilot/radionav-channel/turn-rate-inv</property>
				</sum>
			</function>
		</fcs_function>

<!-- the commanded aileron position change using the turn rate error -->
		<pid name="/autopilot/radionav-channel/cmd-ail-change">
			<input>/autopilot/radionav-channel/turn-rate-error</input>
			<kp>/autopilot/radionav-channel/turn-rate-error-kp</kp>							
			<ki>/autopilot/radionav-channel/turn-rate-error-ki</ki>
			<kd>/autopilot/radionav-channel/turn-rate-error-kd</kd>
		</pid>

<!-- calculating the new aileron position-->
		<fcs_function name="/autopilot/radionav-channel/cmd-ap-ail-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/aileron-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/nav</property>
						<value>1.0</value>
						<property>/autopilot/radionav-channel/cmd-ail-change</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/radionav-channel/cmd-ap-ail-pos-norm-raw</output>
		</fcs_function>

<!-- making sure the aileron servo is not going to fast-->	
		<actuator name="/autopilot/radionav-channel/ail-servo">
			<input>/autopilot/radionav-channel/cmd-ap-ail-pos-norm-raw</input>
			<rate_limit>0.05</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/radionav-channel/cmd-ap-ail-pos-norm</output>
		</actuator>

<!--this makes the aileron pilot input to move along, so when the nav mode is disconnected, the ailerons are in the correct position-->
		<switch name="radionavon">
			<default value="/controls/flight/aileron"/>
			<test logic="AND" value="/autopilot/radionav-channel/cmd-ap-ail-pos-norm">
				<test value="1">
					/autopilot/mode/nav eq 1
				</test>
				<test logic="OR" value="1">
					/instrumentation/nav-source eq 0
					/instrumentation/nav-source eq 1
				</test>
			</test>
			<output>/controls/flight/aileron</output>
		</switch>

<!-- switch off HDG mode (for HDG+NAV mode)-->
		<switch name="hdgoff">
			<default value="/autopilot/mode/heading"/>
			<test logic="AND" value="0">
				<test logic="AND" value="1">
					/autopilot/mode/nav eq 1
					/autopilot/radionav-channel/needle-defl-full eq 0
				</test>
				<test logic="OR" value="1">
					<test logic="AND" value="1">
						/autopilot/radionav-channel/heading-needle-deflection-norm gt 0
						/autopilot/radionav-channel/heading-error-deg lt 0
					</test>
					<test logic="AND" value="1">
						/autopilot/radionav-channel/heading-needle-deflection-norm lt 0
						/autopilot/radionav-channel/heading-error-deg gt 0
					</test>
				</test>
			</test>
			<output>/autopilot/mode/heading</output>
		</switch>

<!-- setting APR mode ON automatically-->
		<switch name="APRmodeon">
			<default value="/autopilot/mode/apr"/>
			<test logic="AND" value="1">
				<test logic="OR" value="1">
					/instrumentation/nav-source eq 0
					/instrumentation/nav-source eq 1
				</test>
				<test logic="AND" value="1">
					/autopilot/mode/nav eq 1
					/autopilot/mode/rev eq 0
					/autopilot/radionav-channel/is-localizer-frequency eq 1
					/autopilot/radionav-channel/timer-cap gt 5
				</test>
			</test>
			<output>/autopilot/mode/apr</output>
		</switch>

<!-- switching APR mode off when nav mode is not on, on FMS, not tuned to localizer freq, CDI needle defl more then 1 (less then -1)-->
		<switch name="APRmodeoff">
			<default value="/autopilot/mode/apr"/>
			<test logic="OR" value="0">
				/autopilot/mode/nav eq 0
				/instrumentation/nav-source eq 2
				/autopilot/radionav-channel/is-localizer-frequency eq 0
				/autopilot/radionav-channel/timer-full-defl eq 1
			</test>
			<output>/autopilot/mode/apr</output>
		</switch>

	</channel>

<!-- ********************* GLIDESLOPE ********************-->
	<channel name="glideslope">
	
	<!-- selecting GS properties from active nav -->
		<switch name="gsselect">
			<default value="/instrumentation/nav[0]/gs-in-range"/>
			<test value="/instrumentation/nav[1]/gs-in-range">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/gs-channel/gs-in-range</output>
		</switch>

		<switch name="gsselect2">
			<default value="/instrumentation/nav[0]/has-gs"/>
			<test value="/instrumentation/nav[1]/has-gs">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/gs-channel/has-gs</output>
		</switch>

		<switch name="gsselect3">
			<default value="/instrumentation/nav[0]/gs-needle-deflection-norm"/>
			<test value="/instrumentation/nav[1]/gs-needle-deflection-norm">
				/instrumentation/nav-source eq 1
			</test>
			<output>/autopilot/gs-channel/gs-needle-deflection-norm</output>
		</switch>

	<!-- arming GS -->
		<switch name="armgs">
			<default value="/autopilot/mode/gs-armed"/>
			<test logic="AND" value="1">
				/autopilot/mode/nav eq 1
				/autopilot/mode/apr eq 1
				/autopilot/mode/alt eq 1
				/autopilot/gs-channel/gs-in-range eq 1
				/autopilot/radionav-channel/is-localizer-frequency eq 1
				/autopilot/radionav-channel/needle-defl-gt-half eq 0
				/autopilot/gs-channel/gs-needle-deflection-norm lt 0.1
				/autopilot/mode/gs-disable eq 0
			</test>
			<output>/autopilot/mode/gs-armed</output>
		</switch>

	<!-- follow gs signal -->
		<switch name="gs-follow">
			<default value="/autopilot/mode/gs-follow"/>
			<test logic="AND" value="1">
				/autopilot/gs-channel/gs-needle-deflection-norm lt 0.05	
				/autopilot/mode/gs-armed eq 1
			</test>
			<output>/autopilot/mode/gs-follow</output>
		</switch>

	<!-- setting the GS indication (armed or following) -->
		<switch name="gs-ind">
			<default value="0"/>
			<test logic="OR" value="1">
				/autopilot/mode/gs-follow eq 1		
				/autopilot/mode/gs-armed eq 1
			</test>
			<output>/autopilot/mode/gs</output>
		</switch>

	<!-- automatic ALT mode off when GS(-follow) is active  -->
		<switch name="altoff">
			<default value="/autopilot/mode/alt"/>
			<test logic="AND" value="0">
				/autopilot/mode/gs-follow eq 1	
			</test>
			<output>/autopilot/mode/alt</output>
		</switch>

<!-- the gs-needle deflection differential part -->
		<pid name="/autopilot/gs-channel/gs-needle-deflection-pid">
			<input>/autopilot/gs-channel/gs-needle-deflection-norm</input>
			<kp>0</kp>							
			<ki>0</ki>
			<kd>/autopilot/gs-channel/gs-ndefl-gain-kd</kd>
			<output>/autopilot/gs-channel/gs-needle-deflection-diff</output>
		</pid>
	
<!-- pitch error (NOT in deg) using the glideslope deflection, dampened by the accel sensor inthe AP computer-->
		<fcs_function name="/autopilot/gs-channel/pitch-error">
			<function>
				<product>
					<property>/autopilot/mode/gs-follow</property>
					<property>/autopilot/gs-channel/pitch-error-gain</property>
					<sum>
						<property>/autopilot/gs-channel/gs-needle-deflection-norm</property>
						<property>/autopilot/gs-channel/gs-needle-deflection-diff</property>
						<product>	
							<property>/autopilot/gs-channel/accel-rate-gain</property>
							<property>/autopilot/accsens-channel/ap-z-accel</property>
						</product>
					</sum>
				</product>
			</function>
		</fcs_function>

<!-- moving the elevator -->
		<fcs_function name="/autopilot/gs-channel/cmd-ap-elev-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/elevator-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/gs-follow</property>
						<value>1.0</value>
						<property>/autopilot/gs-channel/pitch-error</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/gs-channel/cmd-ap-elev-pos-norm-raw</output>
		</fcs_function>

<!-- limiting the elevator movement speed -->
		<actuator name="/autopilot/gs-channel/pitch-servo">
			<input>/autopilot/gs-channel/cmd-ap-elev-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/gs-channel/cmd-ap-elev-pos-norm</output>
		</actuator>

<!--this makes the elevator pilot input to move along, so when the gs mode is disconnected, the elevator is in the correct position-->
		<switch name="gson">
			<default value="/controls/flight/elevator"/>
			<test value="/autopilot/gs-channel/cmd-ap-elev-pos-norm">
				/autopilot/mode/gs-follow eq 1
			</test>
			<output>/controls/flight/elevator</output>
		</switch>

	</channel>

<!--***************************************FMS (GPS) NAVIGATION**********************************************************************-->

	<channel name="fmsnav">

<!-- 	/instrumentation/gps/wp/leg-true-course-deg
	/instrumentation/gps/wp/leg-distance-nm
	/instrumentation/gps/wp/wp[1]/distance-nm
	/instrumentation/gps/wp/wp[1]/bearing-true-deg (direct to next waypoint, wp[1])
	/instrumentation/gps/wp/wp[1]/course-error-nm (left of leg =pos) = /instrumentation/nav[2]/crosstrack-error-m
	/instrumentation/gps/cdi-deflection = /instrumentation/nav[2]/heading-needle-deflection-norm = (dependent on /instrumentation/gps/config/cdi-max-deflection-nm
	/instrumentation/gps/indicated-ground-speed-kt
	/instrumentation/gps/indicated-track-true-deg (aircraft track)
	/instrumentation/gps/serviceable
	/instrumentation/gps/raim (should be 1)

-->

	<!-- determining if fms is "servicable" -->
		<switch name="fmsservicable">
			<default value="0"/>
			<test logic="AND" value="1">
				<test logic="AND" value="1">
					/instrumentation/gps/raim eq 1
				</test>
				<test logic="OR" value="1">
					/instrumentation/gps/serviceable eq 1
					/instrumentation/gps[1]/serviceable eq 1
				</test>
			</test>
			<output>/autopilot/fms-channel/serviceable</output>
		</switch>


<!-- selecting GPS properties from gps1 or 2 depending on "servicable" -->
		<switch name="gpsselect0">
			<default value="/instrumentation/gps/gpss/in-turn"/>
			<test value="/instrumentation/gps[1]/gpss/in-turn">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/inturn</output>
		</switch>

<!-- setting gpss-enabled as a function of /autopilot/mode/gpss (autopilot.nas) -->

		<switch name="gpssenable1">
			<default value="0"/>
			<test value="1">
				/autopilot/mode/gpss eq 1
			</test>
			<output>/instrumentation/gps/gpss/config/enabled</output>
		</switch>

		<switch name="gpssenable2">
			<default value="0"/>
			<test value="1">
				/autopilot/mode/gpss eq 1
			</test>
			<output>/instrumentation/gps[1]/gpss/config/enabled</output>
		</switch>

<!-- course -->
		<switch name="gpsselect1a">
			<default value="/instrumentation/gps/wp/leg-true-course-deg"/>
			<test value="/instrumentation/gps[1]/wp/leg-true-course-deg">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/normal/leg-true-course-deg</output>
		</switch>

		<switch name="gpsselect1b">
			<default value="/instrumentation/gps/gpss/target-course-true-deg"/>
			<test value="/instrumentation/gps[1]/gpss/target-course-true-deg">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/gpss/leg-true-course-deg</output>
		</switch>

		<switch name="gpsselect1c">
			<default value="/autopilot/fms-channel/normal/leg-true-course-deg"/>
			<test value="/autopilot/fms-channel/gpss/leg-true-course-deg">
				/autopilot/fms-channel/inturn eq 1
			</test>
			<output>/autopilot/fms-channel/leg-true-course-deg</output>
		</switch>

		<switch name="gpsselect2">
			<default value="/instrumentation/gps/wp/wp[1]/bearing-true-deg"/>
			<test value="/instrumentation/gps[1]/wp/wp[1]/bearing-true-deg">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/dto/true-course-deg</output>
		</switch>

<!-- x-track error -->
		<switch name="gpsselect3a">
			<default value="/instrumentation/gps/wp/wp[1]/course-error-nm"/>
			<test value="/instrumentation/gps[1]/wp/wp[1]/course-error-nm">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/normal/course-error-nm</output>
		</switch>

		<switch name="gpsselect3b">
			<default value="/instrumentation/gps/wp/wp[1]/course-error-nm"/>
			<test value="/instrumentation/gps[1]/wp/wp[1]/course-error-nm">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/gpss/course-error-nm</output>
		</switch>
		<switch name="gpsselect3c">
			<default value="/autopilot/fms-channel/normal/course-error-nm"/>
			<test value="/autopilot/fms-channel/gpss/course-error-nm">
				/autopilot/fms-channel/inturn eq 1
			</test>
			<output>/autopilot/fms-channel/course-error-nm</output>
		</switch>

 		<switch name="gpsselect4">
			<default value="/instrumentation/gps/wp/leg-distance-nm"/>
			<test value="/instrumentation/gps[1]/wp/leg-distance-nm">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/leg-distance</output>
		</switch>

		<pure_gain name="/autopilot/fms-channel/course-error-norm">
			<input>/autopilot/fms-channel/course-error-nm</input>
			<gain>0.3333333</gain>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
		</pure_gain>

		<switch name="gpsselect5">
			<default value="/instrumentation/gps/cdi-deflection"/>
			<test value="/instrumentation/gps[1]/cdi-deflection">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/cdi-deflection</output>
		</switch>

		<switch name="gpsselect6">
			<default value="/instrumentation/gps/indicated-track-true-deg"/>
			<test value="/instrumentation/gps[1]/indicated-track-true-deg">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/indicated-track-true-deg</output>
		</switch>

		<switch name="gpsselect7">
			<default value="/instrumentation/gps/gpss/target-turn-rate-degps"/>
			<test value="/instrumentation/gps[1]/gpss/target-turn-rate-degps">
				/instrumentation/gps/serviceable eq 0
			</test>
			<output>/autopilot/fms-channel/target-gpss-turn-rate</output>
		</switch>




<!-- setting the course of nav1 automatically when fms active and selected -->
		<switch name="courseNav1set">
			<default value="/instrumentation/nav/radials/selected-deg"/>
			<test logic="AND" value="/autopilot/fms-channel/leg-true-course-deg">
				/autopilot/route-manager/current-wp gt -1
				/instrumentation/nav-source eq 2
			</test>
			<output>/instrumentation/nav/radials/selected-deg</output>
		</switch>

<!-- GPSS calcs -->


<!--calculating the target heading to intercept the leg-->
		<pid name="/autopilot/fms-channel/relative-diff-heading-target-deg">
			<input>/autopilot/fms-channel/course-error-nm</input>
			<kp>/autopilot/fms-channel/tgt-hdg-kp</kp>							
			<ki>/autopilot/fms-channel/tgt-hdg-ki</ki>
			<kd>/autopilot/fms-channel/tgt-hdg-kd</kd>
			<output>/autopilot/fms-channel/relative-d-heading-target-deg</output>
		</pid>

		<fcs_function name="/autopilot/fms-channel/p-gain">
			<function>
				<product>
					<property>/autopilot/fms-channel/gain</property>
					<pow> 
						<max>
							<abs>
								<property>/autopilot/fms-channel/relative-d-heading-target-deg</property> 
							</abs>
							<value>0.000001</value>  <!--just to prevent seg fault -->
						</max>
						<value>-1</value>
					</pow>
				</product>
			</function>
		</fcs_function>

		<pure_gain name="/autopilot/fms-channel/p-gain-lmd">
			<input>/autopilot/fms-channel/p-gain</input>
			<gain>1</gain>
			<clipto>
				<min>0</min>
				<max>225</max>		<!-- making sure it starts to turns at min needle defl of |0.2| --> 
			</clipto>
		</pure_gain>

		<pure_gain name="/autopilot/fms-channel/relative-course-target-deg">
			<input>/autopilot/fms-channel/course-error-nm</input>
			<gain>/autopilot/fms-channel/p-gain-lmd</gain>
			<clipto>
				<min>/autopilot/fms-channel/rel-hdg-min</min>
				<max>/autopilot/fms-channel/rel-hdg-max</max>
			</clipto>
		</pure_gain>

<!--target course -->
		<fcs_function name="/autopilot/fms-channel/course-target1-deg">
			<function>
				<sum>
					<property>/autopilot/fms-channel/leg-true-course-deg</property> 
					<property>/autopilot/fms-channel/relative-course-target-deg</property> 
				</sum>
			</function>
		</fcs_function>
	
	<!-- switching target course between normal fms and Direct To course -->
		<switch name="dtoselect">
			<default value="/autopilot/fms-channel/course-target1-deg"/>
			<test value="/autopilot/fms-channel/dto/true-course-deg">
				/autopilot/settings/dto-leg eq 1
			</test>
			<output>/autopilot/fms-channel/course-target-deg</output>
		</switch>

		<fcs_function name="/autopilot/fms-channel/crs-error/course-1-error-deg">
			<function>
				<difference>
					<property>/autopilot/fms-channel/course-target-deg</property> 
					<property>/autopilot/fms-channel/indicated-track-true-deg</property> 
				</difference>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/fms-channel/crs-error/course-2-error-deg">
			<function>
				<sum>
					<property>/autopilot/fms-channel/crs-error/course-1-error-deg</property> 
					<value>360</value> 
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/fms-channel/crs-error/course-3-error-deg">
			<function>
				<difference>
					<property>/autopilot/fms-channel/crs-error/course-1-error-deg</property> 
					<value>360</value> 
				</difference>
			</function>
		</fcs_function>

		<switch name="crsdirection">
			<default value="/autopilot/fms-channel/crs-error/course-1-error-deg"/>
			<test value="/autopilot/fms-channel/crs-error/course-2-error-deg">
				/autopilot/fms-channel/crs-error/course-1-error-deg lt -180
			</test>
			<output>/autopilot/fms-channel/crs-error/course-4-error-deg</output>
		</switch>

		<switch name="crsdirection2">
			<default value="/autopilot/fms-channel/crs-error/course-4-error-deg"/>
			<test value="/autopilot/fms-channel/crs-error/course-3-error-deg">
				/autopilot/fms-channel/crs-error/course-1-error-deg gt 180
			</test>
			<output>/autopilot/fms-channel/crs-error/course-error-deg</output>
		</switch>

<!--the course error is clipped to -20 to 20 deg -->
		<pure_gain name="/autopilot/fms-channel/lmd-crs-error-clp">
			<input>/autopilot/fms-channel/crs-error/course-error-deg</input>
			<gain>1.0</gain>
			<clipto>
				<min>-20</min>
				<max>20</max>
			</clipto>
		</pure_gain>

		<switch name="crserrorendofflp">
			<default value="/autopilot/fms-channel/lmd-crs-error-clp"/>
			<test logic="OR" value="0">
				/autopilot/fms-channel/leg-distance lt 0.0		<!-- end of flightplan -->
				/autopilot/fms-channel/serviceable eq 0			<!-- gps not working (both units or no satellites), no position -->
			</test>
			<output>/autopilot/fms-channel/lmd-crs-error</output>
		</switch>

<!--determining the target turn rate using the crs error. Note that kp and the clipped crs error determines the maximum turnrate-->
		<pid name="/autopilot/fms-channel/target-turn-rate-pid">
			<input>/autopilot/fms-channel/lmd-crs-error</input>
			<kp>/autopilot/fms-channel/lmd-hdg-error-kp</kp>							<!--180deg/min devided by 20deg -->
			<ki>/autopilot/fms-channel/lmd-hdg-error-ki</ki>
			<kd>/autopilot/fms-channel/lmd-hdg-error-kd</kd>
			<output>/autopilot/fms-channel/target-turn-rate-n</output>
		</pid>

<!-- target turn rate including gpss nominal turn rate -->
		<fcs_function name="/autopilot/fms-channel/target-turn-rate-g">
			<function>
				<sum>
					<product>
						<property>/autopilot/fms-channel/target-gpss-turn-rate</property> 
						<value>180.0</value>
						<property>/autopilot/fms-channel/inturn</property> 
						<property>/autopilot/mode/gpss</property> 
					</product> 
					<property>/autopilot/fms-channel/target-turn-rate-n</property>  
				</sum>
			</function>
		</fcs_function>

<!--the target turnrate is clipped to -3 to 3 deg/s -->
		<pure_gain name="/autopilot/fms-channel/target-turn-rate-g-clp">
			<input>/autopilot/fms-channel/target-turn-rate-g</input>
			<gain>1.0</gain>
			<clipto>
				<min>-180</min>
				<max>180</max>
			</clipto>
		</pure_gain>

		<!--switch name="dtooff">
			<default value="/autopilot/settings/dto-leg"/>
			<test logic="AND" value="0">
				/autopilot/fms-channel/gpss/distance-to-turn gt /autopilot/fms-channel/gpss/distance-nm
			</test>
			<output>/autopilot/settings/dto-leg</output>
		</switch-->


<!-- the turn rate (inverted) as measured by the turn coordinator in deg/s (RH panel) -->
		<fcs_function name="/autopilot/fms-channel/turn-rate-inv">
			<function>
				<product>
					<value>-180.0</value>
					<property>/instrumentation/turn-indicator/indicated-turn-rate</property>  <!--pos right-->
				</product>
			</function>
		</fcs_function>

<!-- the turn rate error -->
		<fcs_function name="/autopilot/fms-channel/turn-rate-error">
			<function>
				<sum>
					<property>/autopilot/fms-channel/target-turn-rate-g-clp</property>	
					<property>/autopilot/fms-channel/turn-rate-inv</property>
				</sum>
			</function>
		</fcs_function>

<!-- the commanded aileron position change using the turn rate error -->
		<pid name="/autopilot/fms-channel/cmd-ail-change">
			<input>/autopilot/fms-channel/turn-rate-error</input>
			<kp>/autopilot/fms-channel/turn-rate-error-kp</kp>							
			<ki>/autopilot/fms-channel/turn-rate-error-ki</ki>
			<kd>/autopilot/fms-channel/turn-rate-error-kd</kd>
		</pid>

<!-- calculating the new aileron position-->
		<fcs_function name="/autopilot/fms-channel/cmd-ap-ail-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/aileron-cmd-tot</property>	
					<product>
                                  	<property>/autopilot/mode/nav</property>
						<value>1.0</value>
						<property>/autopilot/fms-channel/cmd-ail-change</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/fms-channel/cmd-ap-ail-pos-norm-raw</output>
		</fcs_function>

<!-- making sure the aileron servo is not going to fast-->	
		<actuator name="/autopilot/fms-channel/ail-servo">
			<input>/autopilot/fms-channel/cmd-ap-ail-pos-norm-raw</input>
			<rate_limit>0.05</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/fms-channel/cmd-ap-ail-pos-norm</output>
		</actuator>

<!--this makes the aileron pilot input to move along, so when the nav mode is disconnected, the ailerons are in the correct position-->
		<switch name="fmsnavon">
			<default value="/controls/flight/aileron"/>
			<test logic="AND" value="/autopilot/fms-channel/cmd-ap-ail-pos-norm">
				/autopilot/mode/nav eq 1
				/instrumentation/nav-source eq 2
			</test>
			<output>/controls/flight/aileron</output>
		</switch>

<!-- switching gpss mode off when fms is NOT selected or GPS fails to work -->
		<switch name="gpssmodeoff">
			<default value="/autopilot/mode/gpss"/>
			<test logic="OR" value="0">
				/instrumentation/nav-source eq 0
				/instrumentation/nav-source eq 1
				/autopilot/fms-channel/serviceable eq 0
			</test>
			<output>/autopilot/mode/gpss</output>
		</switch>

<!-- switch off HDG mode (for HDG+NAV mode)-->
		<switch name="hdgofffms">
			<default value="/autopilot/mode/heading"/>
			<test logic="AND" value="0">
				/autopilot/mode/nav eq 1
				/instrumentation/nav-source eq 2
				/autopilot/fms-channel/course-error-nm lt 3.0
				/autopilot/fms-channel/course-error-nm gt -3.0
			</test>
			<output>/autopilot/mode/heading</output>
		</switch>

<!-- FIXME: no switching necessary ...indication: course-->

		<switch name="indcourse">
			<default value="/autopilot/fms-channel/leg-true-course-deg"/>
			<test logic="AND" value="/autopilot/fms-channel/leg-true-course-deg">
				/autopilot/mode/gpss eq 1
			</test>
			<output>/autopilot/fms-channel/indicated-course-deg</output>
		</switch>

<!-- FIXME: no switching necessary ...indication: cdi-->
		<switch name="inderror">
			<default value="/autopilot/fms-channel/course-error-norm"/>
			<test logic="AND" value="/autopilot/fms-channel/course-error-norm">
				/autopilot/mode/gpss eq 1
			</test>
			<output>/autopilot/fms-channel/indicated-course-error-norm</output>
		</switch>


	</channel>

<!--********************************VERTICAL SPEED****************************************************************-->

	<channel name="verticalspeed">

<!-- active when vs mode is on-->

<!-- the vertical speed error using the VSbug and altitude sensor-->
		<fcs_function name="/autopilot/vs-channel/vs-error-fpm">
			<function>
				<sum>
					<property>/autopilot/settings/vertical-speed-fpm</property>
					<product>	
						<value>-1.0</value>
						<property>/autopilot/altsensor/vs-fpm</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

<!-- the next two functions calculate a gain and an offset for turning, dependent on turn-coordinator data -->
		<fcs_function name="/autopilot/vs-channel/turnrate-gain2">
			<function>
				<sum>
					<value>1.0</value>
					<product>
						<property>/autopilot/vs-channel/turnrate-gain</property>
						<abs>
							<property>/instrumentation/turn-indicator/indicated-turn-rate</property>
						</abs>
					</product>		
				</sum>
			</function>
			<output>/autopilot/vs-channel/turnrate-gain2</output>
		</fcs_function>

		<fcs_function name="/autopilot/vs-channel/acc-offset">
			<function>
					<product>
						<property>/autopilot/vs-channel/acc-offset-gain</property>
						<abs>
							<property>/instrumentation/turn-indicator/indicated-turn-rate</property>
						</abs>
					</product>		
			</function>
			<output>/autopilot/vs-channel/acc-offset</output>
		</fcs_function>	
	
<!-- pitch error (NOT in deg) using the vs error, dampened by the accel sensor inthe AP computer-->
		<fcs_function name="/autopilot/vs-channel/pitch-error">
			<function>
				<product>
					<property>/autopilot/mode/vs</property>
					<property>/autopilot/vs-channel/pitch-error-gain</property>
					<sum>
						<product>
							<property>/autopilot/vs-channel/turnrate-gain2</property>	
							<property>/autopilot/vs-channel/vs-error-fpm</property>
						</product>
						<product>	
							<!--property>/autopilot/vs-channel/turnrate-gain2</property-->	
							<property>/autopilot/vs-channel/accel-rate-gain</property>
							<sum>
								<property>/autopilot/accsens-channel/ap-z-accel</property>
								<property>/autopilot/vs-channel/acc-offset</property>
							</sum>
						</product>	
					</sum>
				</product>
			</function>
		</fcs_function>

<!-- moving the elevator -->
		<fcs_function name="/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/elevator-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/vs</property>
						<value>1.0</value>
						<property>/autopilot/vs-channel/pitch-error</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw</output>
		</fcs_function>

<!-- limiting the elevator movement speed -->
		<actuator name="/autopilot/vs-channel/pitch-servo">
			<input>/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/vs-channel/cmd-ap-elev-pos-norm</output>
		</actuator>

<!--this makes the elevator pilot input to move along, so when the vs mode is disconnected, the elevator is in the correct position-->
		<switch name="vson">
			<default value="/controls/flight/elevator"/>
			<test value="/autopilot/vs-channel/cmd-ap-elev-pos-norm">
				/autopilot/mode/vs eq 1
			</test>
			<output>/controls/flight/elevator</output>
		</switch>

	</channel>

<!--********************************ALTITUDE HOLD*************************************************************************-->

	<channel name="althold">

		<switch name="vson2">
			<default value="/autopilot/alt-channel/target-alt-ft"/>
			<test logic="AND" value="/autopilot/settings/tgt-altitude-ft">
				/autopilot/mode/vs eq 1
			</test>
			<output>/autopilot/alt-channel/target-alt-ft</output>
		</switch>

		<fcs_function name="/autopilot/alt-channel/alt-error-ft">
			<function>
				<sum>
					<property>/autopilot/alt-channel/target-alt-ft</property>
					<product>	
						<value>-1.0</value>
						<property>/instrumentation/altimeter-IFD-LH/indicated-altitude-ft</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/turnrate-gain2">
			<function>
				<sum>
					<value>1.0</value>
					<product>
						<property>/autopilot/alt-channel/turnrate-gain</property>
						<abs>
							<property>/instrumentation/turn-indicator/indicated-turn-rate</property>
						</abs>
					</product>		
				</sum>
			</function>
			<output>/autopilot/alt-channel/turnrate-gain2</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/acc-offset">
			<function>
					<product>
						<property>/autopilot/alt-channel/acc-offset-gain</property>
						<abs>
							<property>/instrumentation/turn-indicator/indicated-turn-rate</property>
						</abs>
					</product>		
			</function>
			<output>/autopilot/alt-channel/acc-offset</output>
		</fcs_function>									

		<fcs_function name="/autopilot/alt-channel/vs-target-fpm">
			<function>
				<product>
					<property>/autopilot/alt-channel/vs-target-gain</property>
					<property>/autopilot/alt-channel/alt-error-ft</property>
				</product>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/vs-error-fpm">
			<function>
				<sum>
					<property>/autopilot/alt-channel/vs-target-fpm</property>
					<product>	
						<value>-1.0</value>
						<property>/autopilot/altsensor/vs-fpm</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/pitch-error">
			<function>
				<product>
					<property>/autopilot/alt-channel/pitch-error-gain</property>
					<sum>
						<product>
							<property>/autopilot/alt-channel/turnrate-gain2</property>						
							<property>/autopilot/alt-channel/vs-error-fpm</property>
						</product>
						<product>	
							<property>/autopilot/alt-channel/turnrate-gain2</property>						
							<property>/autopilot/alt-channel/accel-rate-gain</property>
							<sum>
								<property>/autopilot/accsens-channel/ap-z-accel</property>
								<property>/autopilot/alt-channel/acc-offset</property>
							</sum>
						</product>	
					</sum>
				</product>
			</function>
		</fcs_function>

		<switch name="alterroron">
			<default value="0"/>
			<test logic="AND" value="/autopilot/alt-channel/pitch-error">
				/autopilot/mode/vs eq 0
				/autopilot/mode/alt eq 1
			</test>
			<output>/autopilot/alt-channel/pitch-error</output>
		</switch>



		<fcs_function name="/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/elevator-cmd-tot</property>	
					<product>
						<property>/autopilot/alt-channel/pitch-error</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw</output>
		</fcs_function>

		<actuator name="/autopilot/alt-channel/pitch-servo">
			<input>/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/alt-channel/cmd-ap-elev-pos-norm</output>
		</actuator>

<!--this part is used for ALT+VS only -->

		<fcs_function name="/autopilot/alt-channel/cmd-vs-abs-nc">
			<function>
				<sum>
					<value>375</value>
					<product>
						<value>1.25</value>
						<abs>
							<property>/autopilot/alt-channel/alt-error-ft</property>
						</abs>
					</product>
				</sum>
			</function>
			<output>/autopilot/alt-channel/cmd-vs-abs-nc</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/cmd-vs-abs">
			<function>
				<min>
					<property>/autopilot/alt-channel/cmd-vs-abs-nc</property>
					<abs>
						<property>/autopilot/settings/vertical-speed-fpm</property>
					</abs>
				</min>
			</function>
			<output>/autopilot/alt-channel/cmd-vs-abs</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/cmd-vs">
			<function>
				<product>
					<property>/autopilot/alt-channel/cmd-vs-abs</property>
					<property>/autopilot/alt-channel/alt-error-ft</property>
					<pow>
						<max>
							<abs>
								<property>/autopilot/alt-channel/alt-error-ft</property>
							</abs>
							<value>1</value>
						</max>
						<value>-1</value>
					</pow>
				</product>
			</function>
			<output>/autopilot/alt-channel/cmd-vs</output>
		</fcs_function>

		<switch name="alt-vson">
			<default value="/autopilot/settings/vertical-speed-fpm"/>
			<test logic="AND" value="/autopilot/alt-channel/cmd-vs">
				/autopilot/mode/vs eq 1
				/autopilot/mode/alt eq 1
			</test>
			<output>/autopilot/settings/vertical-speed-fpm</output>
		</switch>

<!--to switch off vs mode when approching target altitude-->
		<fcs_function name="/autopilot/alt-channel/alt-error-ft-abs">
			<function>
				<abs>
					<property>/autopilot/alt-channel/alt-error-ft</property>
				</abs>
			</function>
		</fcs_function>

<!-- when vs is automatically switched off, set the vs bug to 0 fpm -->
		<switch name="vsoff2">
			<default value="/autopilot/settings/vertical-speed-fpm"/>
			<test logic="AND" value="0">
				/autopilot/mode/vs eq 1
				/autopilot/mode/alt eq 1
				/autopilot/alt-channel/alt-error-ft-abs lt 100.0
			</test>
			<output>/autopilot/settings/vertical-speed-fpm</output>
		</switch>

		<switch name="vsoff">
			<default value="/autopilot/mode/vs"/>
			<test logic="AND" value="0">
				/autopilot/mode/vs eq 1
				/autopilot/mode/alt eq 1
				/autopilot/alt-channel/alt-error-ft-abs lt 100.0
			</test>
			<output>/autopilot/mode/vs</output>
		</switch>

<!--this makes the elevator pilot input to move along, so when the alt mode is disconnected, the elevator is in the correct position-->
		<switch name="alton">
			<default value="/controls/flight/elevator"/>
			<test logic="AND" value="/autopilot/alt-channel/cmd-ap-elev-pos-norm">
				/autopilot/mode/vs eq 0
				/autopilot/mode/alt eq 1
			</test>
			<output>/controls/flight/elevator</output>
		</switch>

	</channel>

<!--****************************AUTO TRIM*****************************************************************************-->

	<channel name="autotrim">
<!-- autotrim active when a pitch mode is active and the pitch trim switch is on-->
		<fcs_function name="/autopilot/pitchtrim-channel/trimmoment-abs">
			<function>
				<abs>
					<property>aircraft/hstab/elevator/H-total-lbsft</property>	
				</abs>
			</function>
		</fcs_function>

<!-- the next two switches determine if trim is needed or not (same as TRIM ind on AP). Any |Ch| gt 3.5 will be trimmed until lt 0.5 -->
		<switch name="autopitchtrimon">
			<default value="/autopilot/mode/trim"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 0
				</test>
				<test value ="1">
					/autopilot/pitchtrim-channel/trimmoment-abs gt 3.5
				</test>
				<test logic="OR" value="1">
					/autopilot/mode/vs eq 1
					/autopilot/mode/alt eq 1
				</test>
			</test>
			<output>/autopilot/mode/trim</output>
		</switch>

		<switch name="autopitchtrimoff">
			<default value="/autopilot/mode/trim"/>
			<test logic="AND" value="0">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test logic="OR" value="1">
					<test value ="0">
						/autopilot/pitchtrim-channel/trimmoment-abs le 0.5
					</test>
					<test logic="AND" value="1">
						/autopilot/mode/vs eq 0
						/autopilot/mode/alt eq 0
					</test>
				</test>
			</test>
			<output>/autopilot/mode/trim</output>
		</switch>

<!-- the next two switches set the indication on the AP, trim up or down (the arrows) -->
		<switch name="autopitchtrimup">
			<default value="0"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test value="1">
					aircraft/hstab/elevator/H-total-lbsft gt 0
				</test>
			</test>
			<output>/autopilot/mode/trim-up</output>
		</switch>

		<switch name="autopitchtrimdown">
			<default value="0"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test value="1">
					aircraft/hstab/elevator/H-total-lbsft lt 0
				</test>
			</test>
			<output>/autopilot/mode/trim-down</output>
		</switch>

<!-- this moves the trim tab if needed and possible--> 
		<fcs_function name="/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/pitch-trim-cmd-tot-norm</property>	
					<product>
						<property>/autopilot/settings/trim</property>
						<property>/autopilot/mode/trim</property>
						<property>/autopilot/pitchtrim-channel/servo-gain</property>
						<property>aircraft/hstab/elevator/H-total-lbsft</property>
						<pow>
							<max>
								<property>/autopilot/pitchtrim-channel/trimmoment-abs</property>
								<value>0.1</value>
							</max>
							<value>-1</value>
						</pow>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw</output>
		</fcs_function>

<!-- limits the trim rate and clips the range -->
		<actuator name="/autopilot/pitchtrim-channel/pitchtrim-servo">
			<input>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm</output>
		</actuator>

<!--this makes the pitch trim pilot input to move along, so when the vs/alt mode is disconnected, the elevator trim is in the correct position-->
		<switch name="vsalton">
			<default value="/controls/flight/elevator-trim"/>
			<test logic="AND" value="/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm">
				/autopilot/mode/trim eq 1
				/autopilot/settings/trim eq 1
			</test>
			<output>/controls/flight/elevator-trim</output>
		</switch>

	</channel>

<!--****************************YAW TRIM*****************************************************************************-->

	<channel name="yawtrim">

<!--checking if yaw trim CAN be on -->
		<switch name="yawtrimon">
			<default value="0"/>
			<test logic="AND" value="1">
				<test value="1">
					/autopilot/settings/yawdamper eq 1
				</test>
				<test logic="OR" value="1">
					/autopilot/mode/heading eq 1
					/autopilot/mode/nav eq 1
				</test>
			</test>
			<output>/autopilot/mode/yawtrim</output>
		</switch>

<!--lateral acceleronmeter in the tailcone-->
		<accelerometer name="/autopilot/yawtrim-channel/ap-y-accelsensor">
			<location unit="M">
				<x>-3.31</x>
				<y>0.0</y>
				<z>0.0</z>
			</location>
  			<orientation unit="DEG">
    				<pitch>0.0</pitch>
    				<roll>0.0</roll>
    				<yaw>0.0</yaw>
  			</orientation>
			<axis>Y</axis>
			<gain>-0.0310809970784</gain>	<!--1/32.174 -->
			<output>/autopilot/yawtrim-channel/ap-y-accel</output>
		</accelerometer>

		<fcs_function name="/autopilot/yawtrim-channel/ap-y-accelsensor-incl-gforce">
			<function>
				<sum>
					<property>/autopilot/yawtrim-channel/ap-y-accelsensor</property>	
					<product>
						<cos>
							<property>attitude/pitch-rad</property>
						</cos>
						<sin>
							<property>attitude/phi-rad</property>
						</sin>
					</product>
				</sum>
			</function>
			<output>/autopilot/yawtrim-channel/ap-y-accelsensor-incl-gforce</output>
		</fcs_function>

		<fcs_function name="/autopilot/yawtrim-channel/ap-y-accel-incl-input">
			<function>
				<sum>
					<property>/autopilot/yawtrim-channel/ap-y-accelsensor-incl-gforce</property>
					<product>
						<property>/autopilot/yawtrim-channel/poti-gain</property>	
						<property>/extra500/panel/Master/Autopilot/YawTrim/state</property>
					</product>	
				</sum>
			</function>
			<output>/autopilot/yawtrim-channel/ap-y-accel-incl-input</output>
		</fcs_function>

		<deadband name="/autopilot/yawtrim-channel/ap-y-accel-clipped">
			<input>/autopilot/yawtrim-channel/ap-y-accel-incl-input</input>
			<width>0.002</width>
			<clipto>
		     		<min>/autopilot/yawtrim-channel/accel-min</min>
                    		<max>/autopilot/yawtrim-channel/accel-max</max>
               		 </clipto>
		</deadband>

<!-- this moves the rudder if needed and possible--> 
		<fcs_function name="/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/rudder-cmd-tot</property>	
					<product>
						<property>/autopilot/mode/yawtrim</property>
						<property>/autopilot/yawtrim-channel/servo-gain</property>
						<property>/autopilot/yawtrim-channel/ap-y-accel-clipped</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-raw</output>
		</fcs_function>

		<actuator name="/autopilot/yawtrim-channel/yawtrim-servo">
			<input>/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-raw</input>
			<rate_limit>0.1</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm</output>
		</actuator>

<!--because of some reason /controls/flight/rudder and /fdm/jsbsim/fcs/rudder-x are reversed in sign and that is the ONLY reason why the lower function exists-->
		<fcs_function name="/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-neg">
			<function>
				<product>
					<property>/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm</property>
					<value>-1.0</value>
				</product>
			</function>
			<output>/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-neg</output>
		</fcs_function>

<!--this makes the rudder pilot input to move along, so when the AP is disconnected, the rudder is in the correct position-->
		<switch name="yawtrimon2">
			<default value="/controls/flight/rudder"/>
			<test value="/autopilot/yawtrim-channel/cmd-ap-rudder-pos-norm-neg">
				/autopilot/mode/yawtrim eq 1
			</test>
			<output>/controls/flight/rudder</output>
		</switch>

	</channel>

</autopilot>

