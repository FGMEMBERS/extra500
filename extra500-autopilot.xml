<?xml version="1.0" encoding="utf-8" ?>
	
<!--
    This file is part of extra500

    The extra500 is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    The extra500 is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with extra500.  If not, see <http://www.gnu.org/licenses/>.

      Author: Eric van den Berg
      Date: 2013-05-23

      Last change:      Eric van den Berg
      Date:             2013-06-01
-->

<autopilot name="STEC55X">

<!--this the acceleration sensor in the AP computer (in the glareshield). It is used to dampen the pitch motion-->
	<channel name="accelsensor">
		<accelerometer name="/autopilot/accsens-channel/ap-z-accelsensor">
			<location unit="M">
				<x>1.1</x>
				<y>0.0</y>
				<z>0.0</z>
			</location>
  			<orientation unit="DEG">
    				<pitch>0.0</pitch>
    				<roll>0.0</roll>
    				<yaw>0.0</yaw>
  			</orientation>
			<axis>Z</axis>
			<gain>0.0310809970784</gain>	<!--1/32.174 -->
			<output>/autopilot/accsens-channel/ap-z-accel</output>
		</accelerometer>

	</channel>

<!--*********************************************************************************************************************-->

	<channel name="altitudesensor">
<!-- this is the dedicated AP altitude sensor (with its own static system) ,located in the tail cone. It is used to mnge vertical speed and altitude hold-->
		<fcs_function name="/autopilot/altsensor/vs-fpm-unfiltered">
			<function>
				<product>
					<value>60.0</value>		
					<sum>
						<property>/instrumentation/altimeter-AP/indicated-altitude-ft</property>
						<property>/autopilot/altsensor/alt-old</property>
					</sum>
					<pow>
						<max>
							<value>0.0001</value>	
							<property>sim-dt-sec</property>
						</max>
						<value>-1.0</value>	
					</pow>
				</product>
			</function>
		</fcs_function>

		<lead_lag_filter name="/autopilot/altsensor/vs-fpm">
			<input>/autopilot/altsensor/vs-fpm-unfiltered</input>
			<c1>/autopilot/altsensor/c1</c1>
			<c2>/autopilot/altsensor/c2</c2>
			<c3>/autopilot/altsensor/c3</c3>
			<c4>/autopilot/altsensor/c4</c4>
		</lead_lag_filter>

		<fcs_function name="/autopilot/altsensor/alt-old">
			<function>
				<product>
					<value>-1.0</value>				
					<property>/instrumentation/altimeter-AP/indicated-altitude-ft</property>
				</product>	
			</function>
		</fcs_function>
	</channel>

<!--*********************************************************************************************************************-->

	<channel name="heading">
<!-- this is the heading channel. when the hdg mode is active, the hdg bug of the LH FID is followed-->

<!--the heading error is clipped to -20 to 20 deg -->
		<pure_gain name="/autopilot/hdg-channel/lmd-hdg-error">
			<input>/instrumentation/heading-indicator-IFD-LH/heading-bug-error-deg</input>
			<gain>1.0</gain>
			<clipto>
				<min>-20</min>
				<max>20</max>
			</clipto>
		</pure_gain>

<!--determining the target turn rate using the hdg error. Note that kp and the clipped hdg error determines the maximum turnrate-->
		<pid name="/autopilot/hdg-channel/target-turn-rate">
			<input>/autopilot/hdg-channel/lmd-hdg-error</input>
			<kp>/autopilot/hdg-channel/lmd-hdg-error-kp</kp>							<!--180deg/min devided by 25deg -->
			<ki>/autopilot/hdg-channel/lmd-hdg-error-ki</ki>
			<kd>/autopilot/hdg-channel/lmd-hdg-error-kd</kd>
		</pid>
		
<!-- the turn rate (inverted) as measured by the turn coordinator in deg/s (RH panel) -->
		<fcs_function name="/autopilot/hdg-channel/turn-rate-inv">
			<function>
				<product>
					<value>-180.0</value>
					<property>/instrumentation/turn-indicator/indicated-turn-rate</property>  <!--pos right-->
				</product>
			</function>
		</fcs_function>

<!-- the turn rate error -->
		<fcs_function name="/autopilot/hdg-channel/turn-rate-error">
			<function>
				<sum>
					<property>/autopilot/hdg-channel/target-turn-rate</property>	
					<property>/autopilot/hdg-channel/turn-rate-inv</property>
				</sum>
			</function>
		</fcs_function>

<!-- the commanded aileron position change using the turn rate error -->
		<pid name="/autopilot/hdg-channel/cmd-ail-change">
			<input>/autopilot/hdg-channel/turn-rate-error</input>
			<kp>/autopilot/hdg-channel/turn-rate-error-kp</kp>							
			<ki>/autopilot/hdg-channel/turn-rate-error-ki</ki>
			<kd>/autopilot/hdg-channel/turn-rate-error-kd</kd>
		</pid>

<!-- calculating the new aileron position-->
		<fcs_function name="/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/aileron-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/heading</property>
						<value>1.0</value>
						<property>/autopilot/hdg-channel/cmd-ail-change</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw</output>
		</fcs_function>

<!-- making sure the aileron servo is not going to fast-->	
		<actuator name="/autopilot/hdg-channel/ail-servo">
			<input>/autopilot/hdg-channel/cmd-ap-ail-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/hdg-channel/cmd-ap-ail-pos-norm</output>
		</actuator>

<!--this makes the aileron pilot input to move along, so when the hdg mode is disconnected, the ailerons are in the correct position-->
		<switch name="headingon">
			<default value="/controls/flight/aileron"/>
			<test value="/autopilot/hdg-channel/cmd-ap-ail-pos-norm">
				/autopilot/mode/heading eq 1
			</test>
			<output>/controls/flight/aileron</output>
		</switch>


	</channel>

<!--*********************************************************************************************************************-->

	<channel name="verticalspeed">

<!-- active when vs mode is on-->

<!-- the vertical speed error using the VSbug and altitude sensor-->
		<fcs_function name="/autopilot/vs-channel/vs-error-fpm">
			<function>
				<sum>
					<property>/autopilot/settings/vertical-speed-fpm</property>
					<product>	
						<value>-1.0</value>
						<property>/autopilot/altsensor/vs-fpm</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

<!-- pitch error (NOT in deg) using the vs error, dampened by the accel sensor inthe AP computer-->
		<fcs_function name="/autopilot/vs-channel/pitch-error">
			<function>
				<product>
					<property>/autopilot/mode/vs</property>
					<property>/autopilot/vs-channel/pitch-error-gain</property>
					<sum>
						<property>/autopilot/vs-channel/vs-error-fpm</property>
						<product>	
							<property>/autopilot/vs-channel/accel-rate-gain</property>
							<property>/autopilot/accsens-channel/ap-z-accel</property>
						</product>	
					</sum>
				</product>
			</function>
		</fcs_function>

<!-- moving the elevator -->
		<fcs_function name="/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/elevator-cmd-tot</property>	
					<product>
                                  		<property>/autopilot/mode/vs</property>
						<value>1.0</value>
						<property>/autopilot/vs-channel/pitch-error</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw</output>
		</fcs_function>

<!-- limiting the elevator movement speed -->
		<actuator name="/autopilot/vs-channel/pitch-servo">
			<input>/autopilot/vs-channel/cmd-ap-elev-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/vs-channel/cmd-ap-elev-pos-norm</output>
		</actuator>

<!--this makes the elevator pilot input to move along, so when the vs mode is disconnected, the elevator is in the correct position-->
		<switch name="vson">
			<default value="/controls/flight/elevator"/>
			<test value="/autopilot/vs-channel/cmd-ap-elev-pos-norm">
				/autopilot/mode/vs eq 1
			</test>
			<output>/controls/flight/elevator</output>
		</switch>

	</channel>

<!--*********************************************************************************************************************-->

	<channel name="althold">

		<switch name="vson2">
			<default value="/autopilot/alt-channel/target-alt-ft"/>
			<test logic="AND" value="/autopilot/settings/target-altitude-ft">
				/autopilot/mode/vs eq 1
			</test>
			<output>/autopilot/alt-channel/target-alt-ft</output>
		</switch>

		<fcs_function name="/autopilot/alt-channel/alt-error-ft">
			<function>
				<sum>
					<property>/autopilot/alt-channel/target-alt-ft</property>
					<product>	
						<value>-1.0</value>
						<property>/instrumentation/altimeter-IFD-LH/indicated-altitude-ft</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/vs-target-fpm">
			<function>
				<product>
					<property>/autopilot/alt-channel/vs-target-gain</property>
					<property>/autopilot/alt-channel/alt-error-ft</property>
				</product>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/vs-error-fpm">
			<function>
				<sum>
					<property>/autopilot/alt-channel/vs-target-fpm</property>
					<product>	
						<value>-1.0</value>
						<property>/autopilot/altsensor/vs-fpm</property>
					</product>	
				</sum>
			</function>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/turnrate-gain2">
			<function>
				<product>
					<property>/autopilot/alt-channel/turnrate-gain</property>
					<sum>
						<value>1.0</value>
						<pow>
							<property>/autopilot/alt-channel/turnrate-gain</property>
							<value>-1.0</value>
						</pow>
						<abs>
							<property>/instrumentation/turn-indicator/indicated-turn-rate</property>
						</abs>
					</sum>
				</product>
			</function>
			<output>/autopilot/alt-channel/turnrate-gain2</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/pitch-error">
			<function>
				<product>
					<property>/autopilot/alt-channel/turnrate-gain2</property>						
					<property>/autopilot/alt-channel/pitch-error-gain</property>
					<sum>
						<property>/autopilot/alt-channel/vs-error-fpm</property>
						<product>	
							<property>/autopilot/alt-channel/accel-rate-gain</property>
							<property>/autopilot/accsens-channel/ap-z-accel</property>
						</product>	
					</sum>
				</product>
			</function>
		</fcs_function>

		<switch name="alterroron">
			<default value="0"/>
			<test logic="AND" value="/autopilot/alt-channel/pitch-error">
				/autopilot/mode/vs eq 0
				/autopilot/mode/alt eq 1
			</test>
			<output>/autopilot/alt-channel/pitch-error</output>
		</switch>



		<fcs_function name="/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/elevator-cmd-tot</property>	
					<product>
						<property>/autopilot/alt-channel/pitch-error</property>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw</output>
		</fcs_function>

		<actuator name="/autopilot/alt-channel/pitch-servo">
			<input>/autopilot/alt-channel/cmd-ap-elev-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/alt-channel/cmd-ap-elev-pos-norm</output>
		</actuator>

<!--this part is used for ALT+VS only -->

		<fcs_function name="/autopilot/alt-channel/cmd-vs-abs-nc">
			<function>
				<sum>
					<value>375</value>
					<product>
						<value>1.25</value>
						<abs>
							<property>/autopilot/alt-channel/alt-error-ft</property>
						</abs>
					</product>
				</sum>
			</function>
			<output>/autopilot/alt-channel/cmd-vs-abs-nc</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/cmd-vs-abs">
			<function>
				<min>
					<property>/autopilot/alt-channel/cmd-vs-abs-nc</property>
					<abs>
						<property>/autopilot/settings/vertical-speed-fpm</property>
					</abs>
				</min>
			</function>
			<output>/autopilot/alt-channel/cmd-vs-abs</output>
		</fcs_function>

		<fcs_function name="/autopilot/alt-channel/cmd-vs">
			<function>
				<product>
					<property>/autopilot/alt-channel/cmd-vs-abs</property>
					<property>/autopilot/alt-channel/alt-error-ft</property>
					<pow>
						<max>
							<abs>
								<property>/autopilot/alt-channel/alt-error-ft</property>
							</abs>
							<value>1</value>
						</max>
						<value>-1</value>
					</pow>
				</product>
			</function>
			<output>/autopilot/alt-channel/cmd-vs</output>
		</fcs_function>

		<switch name="alt-vson">
			<default value="/autopilot/settings/vertical-speed-fpm"/>
			<test logic="AND" value="/autopilot/alt-channel/cmd-vs">
				/autopilot/mode/vs eq 1
				/autopilot/mode/alt eq 1
			</test>
			<output>/autopilot/settings/vertical-speed-fpm</output>
		</switch>

<!--to switch off vs mode when approching target altitude-->
		<fcs_function name="/autopilot/alt-channel/alt-error-ft-abs">
			<function>
				<abs>
					<property>/autopilot/alt-channel/alt-error-ft</property>
				</abs>
			</function>
		</fcs_function>

		<switch name="vsoff">
			<default value="/autopilot/mode/vs"/>
			<test logic="AND" value="0">
				/autopilot/mode/vs eq 1
				/autopilot/mode/alt eq 1
				/autopilot/alt-channel/alt-error-ft-abs lt 100.0
			</test>
			<output>/autopilot/mode/vs</output>
		</switch>


<!--this makes the elevator pilot input to move along, so when the alt mode is disconnected, the elevator is in the correct position-->
		<switch name="alton">
			<default value="/controls/flight/elevator"/>
			<test logic="AND" value="/autopilot/alt-channel/cmd-ap-elev-pos-norm">
				/autopilot/mode/vs eq 0
				/autopilot/mode/alt eq 1
			</test>
			<output>/controls/flight/elevator</output>
		</switch>

	</channel>

<!--*********************************************************************************************************************-->

	<channel name="autotrim">
<!-- autotrim active when a pitch mode is active and the pitch trim switch is on-->
		<fcs_function name="/autopilot/pitchtrim-channel/trimmoment-abs">
			<function>
				<abs>
					<property>aircraft/hstab/elevator/H-total-lbsft</property>	
				</abs>
			</function>
		</fcs_function>

<!-- the next two switches determine if trim is needed or not (same as TRIM ind on AP). Any |Ch| gt 3.5 will be trimmed until lt 0.5 -->
		<switch name="autopitchtrimon">
			<default value="/autopilot/mode/trim"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 0
				</test>
				<test value ="1">
					/autopilot/pitchtrim-channel/trimmoment-abs gt 3.5
				</test>
				<test logic="OR" value="1">
					/autopilot/mode/vs eq 1
					/autopilot/mode/alt eq 1
				</test>
			</test>
			<output>/autopilot/mode/trim</output>
		</switch>

		<switch name="autopitchtrimoff">
			<default value="/autopilot/mode/trim"/>
			<test logic="AND" value="0">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test logic="OR" value="1">
					<test value ="0">
						/autopilot/pitchtrim-channel/trimmoment-abs le 0.5
					</test>
					<test logic="AND" value="1">
						/autopilot/mode/vs eq 0
						/autopilot/mode/alt eq 0
					</test>
				</test>
			</test>
			<output>/autopilot/mode/trim</output>
		</switch>

<!-- the next two switches set the indication on the AP, trim up or down (the arrows) -->
		<switch name="autopitchtrimup">
			<default value="0"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test value="1">
					aircraft/hstab/elevator/H-total-lbsft gt 0
				</test>
			</test>
			<output>/autopilot/mode/trim-up</output>
		</switch>

		<switch name="autopitchtrimdown">
			<default value="0"/>
			<test logic="AND" value="1">
				<test value ="1">
					/autopilot/mode/trim eq 1
				</test>
				<test value="1">
					aircraft/hstab/elevator/H-total-lbsft lt 0
				</test>
			</test>
			<output>/autopilot/mode/trim-down</output>
		</switch>

<!-- this moves the trim tab if needed and possible--> 
		<fcs_function name="/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw">
			<function>
				<sum>
					<property>fcs/pitch-trim-cmd-tot-norm</property>	
					<product>
						<property>/autopilot/settings/trim</property>
						<property>/autopilot/mode/trim</property>
						<property>/autopilot/pitchtrim-channel/servo-gain</property>
						<property>aircraft/hstab/elevator/H-total-lbsft</property>
						<pow>
							<max>
								<property>/autopilot/pitchtrim-channel/trimmoment-abs</property>
								<value>0.1</value>
							</max>
							<value>-1</value>
						</pow>
						<property>sim-dt-sec</property>
					</product>
				</sum>
			</function>
			<output>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw</output>
		</fcs_function>

<!-- limits the trim rate and clips the range -->
		<actuator name="/autopilot/pitchtrim-channel/pitchtrim-servo">
			<input>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm-raw</input>
			<rate_limit>0.2</rate_limit>
			<clipto>
				<min>-1</min>
				<max>1</max>
			</clipto>
			<output>/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm</output>
		</actuator>

<!--this makes the pitch trim pilot input to move along, so when the vs/alt mode is disconnected, the elevator trim is in the correct position-->
		<switch name="vsalton">
			<default value="/controls/flight/elevator-trim"/>
			<test logic="AND" value="/autopilot/pitchtrim-channel/cmd-ap-trim-pos-norm">
				/autopilot/mode/trim eq 1
				/autopilot/settings/trim eq 1
			</test>
			<output>/controls/flight/elevator-trim</output>
		</switch>

	</channel>


</autopilot>

